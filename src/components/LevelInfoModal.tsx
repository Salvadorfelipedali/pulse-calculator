import React from 'react';

interface LevelInfoModalProps {
  onClose: () => void;
}

export const LevelInfoModal: React.FC<LevelInfoModalProps> = ({ onClose }) => {
  const levels = [
    {
      name: '–ù–æ–≤–∏—á–æ–∫',
      icon: 'üå±',
      requirements: [
        '–û—Ç 1,000 USDT —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π',
        '–ò–õ–ò 10+ –ª–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
      ],
      benefits: [
        '10% —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π 1-–≥–æ —É—Ä–æ–≤–Ω—è',
        '4% —Å –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–∏—Å—Å–∏–∏ 1-–≥–æ —É—Ä–æ–≤–Ω—è',
        '10% —Å –ø–æ–¥–ø–∏—Å–æ–∫ 1-–≥–æ —É—Ä–æ–≤–Ω—è'
      ],
      bgColor: 'bg-green-50',
      borderColor: 'border-green-200',
      textColor: 'text-green-800'
    },
    {
      name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª',
      icon: 'üíº',
      requirements: [
        '–û—Ç 5,000 USDT —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π',
        '–ò–õ–ò 25+ –ª–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
      ],
      benefits: [
        '–í—Å–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –ù–æ–≤–∏—á–∫–∞ +',
        '5% —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π 2-–≥–æ —É—Ä–æ–≤–Ω—è',
        '2% —Å –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–∏—Å—Å–∏–∏ 2-–≥–æ —É—Ä–æ–≤–Ω—è',
        '5% —Å –ø–æ–¥–ø–∏—Å–æ–∫ 2-–≥–æ —É—Ä–æ–≤–Ω—è'
      ],
      bgColor: 'bg-blue-50',
      borderColor: 'border-blue-200',
      textColor: 'text-blue-800'
    },
    {
      name: '–ê–º–±–∞—Å—Å–∞–¥–æ—Ä',
      icon: 'üëë',
      requirements: [
        '–û—Ç 10,000 USDT —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π',
        '–ò–õ–ò 50+ –ª–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
      ],
      benefits: [
        '–í—Å–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞ +',
        '5% —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π 3-–≥–æ —É—Ä–æ–≤–Ω—è',
        '1% —Å –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–∏—Å—Å–∏–∏ 3-–≥–æ —É—Ä–æ–≤–Ω—è',
        '5% —Å –ø–æ–¥–ø–∏—Å–æ–∫ 3-–≥–æ —É—Ä–æ–≤–Ω—è',
        '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∏ —Å—Ç–∞—Ç—É—Å'
      ],
      bgColor: 'bg-purple-50',
      borderColor: 'border-purple-200',
      textColor: 'text-purple-800'
    }
  ];

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div className="sticky top-0 bg-white border-b border-gray-200 px-6 py-4 flex items-center justify-between">
          <h2 className="text-2xl font-bold text-gray-900">
            ‚ÑπÔ∏è –£—Å–ª–æ–≤–∏—è —É—Ä–æ–≤–Ω–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
          </h2>
          <button
            onClick={onClose}
            onMouseDown={(e) => e.preventDefault()}
            className="text-gray-500 hover:text-gray-700 text-2xl font-bold focus:outline-none"
          >
            √ó
          </button>
        </div>

        <div className="p-6">
          <div className="grid md:grid-cols-3 gap-6">
            {levels.map((level, index) => (
              <div key={index} className={`${level.bgColor} ${level.borderColor} border rounded-xl p-6`}>
                <div className="flex items-center gap-3 mb-4">
                  <span className="text-3xl">{level.icon}</span>
                  <h3 className={`text-xl font-bold ${level.textColor}`}>
                    {level.name}
                  </h3>
                </div>

                <div className="mb-4">
                  <h4 className={`font-semibold mb-2 ${level.textColor}`}>
                    –£—Å–ª–æ–≤–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è:
                  </h4>
                  <ul className="space-y-1">
                    {level.requirements.map((req, reqIndex) => (
                      <li key={reqIndex} className="text-sm text-gray-700 flex items-start gap-2">
                        <span className="text-blue-500 mt-1">‚Ä¢</span>
                        {req}
                      </li>
                    ))}
                  </ul>
                </div>

                <div>
                  <h4 className={`font-semibold mb-2 ${level.textColor}`}>
                    –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏:
                  </h4>
                  <ul className="space-y-1">
                    {level.benefits.map((benefit, benefitIndex) => (
                      <li key={benefitIndex} className="text-sm text-gray-700 flex items-start gap-2">
                        <span className="text-green-500 mt-1">‚úì</span>
                        {benefit}
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            ))}
          </div>

          <div className="mt-8 bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-xl p-6">
            <h3 className="text-lg font-bold text-blue-900 mb-3">
              üí° –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:
            </h3>
            <div className="grid md:grid-cols-2 gap-4 text-sm text-blue-800">
              <div>
                <p className="mb-2">
                  <strong>1-–π —É—Ä–æ–≤–µ–Ω—å:</strong> –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –ª–∏—á–Ω–æ
                </p>
                <p className="mb-2">
                  <strong>2-–π —É—Ä–æ–≤–µ–Ω—å:</strong> –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã
                </p>
              </div>
              <div>
                <p className="mb-2">
                  <strong>3-–π —É—Ä–æ–≤–µ–Ω—å:</strong> –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã 2-–≥–æ —É—Ä–æ–≤–Ω—è
                </p>
                <p className="text-xs text-blue-600 mt-2">
                  –ß–µ–º –≤—ã—à–µ –≤–∞—à —Å—Ç–∞—Ç—É—Å, —Ç–µ–º –±–æ–ª—å—à–µ —É—Ä–æ–≤–Ω–µ–π –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ!
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};